'use strict';

/**
 * @ngdoc function
 * @name frontApp.controller:ClientsCtrl
 * @description
 * # ClientsCtrl
 * Controlador de la parte "Clientes"
 */
angular.module('frontApp')
	.controller('ClientsCtrl', function ($scope, $http, $routeParams, clientService, $location, $timeout) {
		
		$scope.termino = '';								// Término de búsqueda asociado al cajón.
		$scope.mostrarTabla = false;						// Flag para mostrar la tabla de resultados.
		$scope.mode = 'list';								// Modo de la página.
		$scope.item = {										// Item a editar / borrar.
				id: 0,
				nombre: '',
				descripcion: '',
				arquitecturas: []
		};									
		$scope.itemIndex = -1;								// Índice del ítem con el que se está trabajando.
		$scope.newLegend = '';
		$scope.actionResult = '';
		
		/* Se hace un watch sobre clientService.actionResult para 
		 * tener en el scope siempre el resultado de las acciones disponible. */
		$scope.$watch(function(){
						return clientService.actionResult;
					},
					function(newVal, oldVal){
						if (newVal !== oldVal)
							$scope.actionResult = clientService.actionResult;
					}
				);
		
		/* Cuando se cambia la ruta se recoge el item con el que estamos trabajando */
		$scope.$on('$routeChangeSuccess', function(event, next, current){
			if ( next.$$route.mode == 'edit' ){
					$scope.item = clientService.data[next.params.idx];
					$scope.newLegend = 'Edición de cliente';
			} else if ( next.$$route.mode == 'new' ){
					$scope.item = null;
					$scope.newLegend = 'Alta de cliente';
			}
			/* Se actualiza el modo */
			$scope.mode = next.$$route.mode;
		});
		
		/* Al abandonar la página de búsqueda se debe eliminar el mensaje 'actionResult' */
		$scope.$on('$routeChangeStart', function(event, next, current){
			if ($scope.mode == 'list')
				clientService.actionResult = '';
		});
		
		/****************************************************/
		/*		BÚSQUEDA / LISTADO							*/
		/****************************************************/
		
		/* Hace la llamada al servidor y recoge los datos */
		$scope.buscar = function(){
			
			/* Se hace la petición al servidor con el término de búsqueda */
			$http.get('/api/cliente/obtenerClientes?nombre=' + $scope.termino)

			/* Petición correcta */
			.then(function successCallback(response){
				$scope.resultados = response.data;
				clientService.data = response.data;
				
				/* Se muestra la tabla de resultados */
				$scope.mostrarTabla = true;

			/* Petición incorrecta */
			}, function errorCallback(response){
				clientService.actionResult = '<div class="alert alert-danger"><p>No se ha podido realizar búsqueda.</p>';
				clientService.actionResult += '<p>Error ' + response.data[0].errorCode + ': ' + response.data[0].errorMsg + '</p></div>';
			});
		};
		
		/****************************************************/
		/*		EDICIÓN										*/
		/****************************************************/

		$scope.editar = function(index){
			
			$http.put('/api/cliente/actualizarCliente', $scope.item)
			
			/* Se definen los mensajes a mostrar */
			.then(function successCallback(response){
				clientService.actionResult = '<div class="alert alert-success"><p>Edición llevada a cabo con éxito.</p></div>';
			}, function errorCallback(response){
				clientService.actionResult = '<div class="alert alert-danger"><p>No se ha podido realizar la edición del cliente.</p>';
				clientService.actionResult += '<p>Error ' + response.data[0].errorCode + ': ' + response.data[0].errorMsg + '</p></div>';
			})
			.finally(function(){
				/* Se vacía el array de resultados de la búsqueda realizada inicialmente */
				clientService.data = [];
				
				/* Se redirecciona a la página principal. */
				$location.path('/clientes');
			});
		};
		
		
		/****************************************************/
		/*		BORRADO										*/
		/****************************************************/
		
		/* Abre el cuadro de diálogo de confirmación del borrado */
		$scope.borrar = function(index){
			$scope.item = clientService.data[index];
			$scope.itemIndex = index;
			$('#deleteDialog').modal();
		};
		
		/* Elimina el elemento indicado previamente en borrar() */
		$scope.confirmarBorrar = function(){
			
			//$http.delete('/api/cliente/eliminarCliente?id=' + $scope.item.id)
			$http.delete('/api/cliente/eliminarCliente', $scope.item)
			/* Se definen los mensajes a mostrar */
			.then(function successCallback(response){
				clientService.data.splice($scope.itemIndex, 1);
				clientService.actionResult = '<div class="alert alert-success"><p>Baja llevada a cabo con éxito.</p></div>';
				$timeout(function(){$scope.$apply();});
			}, function errorCallback(response){
				clientService.actionResult = '<div class="alert alert-danger"><p>No se ha podido eliminar el cliente.</p>';
				clientService.actionResult += '<p>Error ' + response.data[0].errorCode + ': ' + response.data[0].errorMsg + '</p></div>';
			})
			.finally(function(){
				$('#deleteDialog').modal('hide');
			});
		}
		
		/****************************************************/
		/*		ALTA										*/
		/****************************************************/
		/* Ejecuta el alta de un nuevo elemento */
		$scope.alta = function(){
			
			$http.post('/api/cliente/crearCliente', $scope.item)
			
			/* Se definen los mensajes a mostrar */
			.then(function successCallback(response){
				clientService.actionResult = '<div class="alert alert-success"><p>Alta llevada a cabo con éxito.</p></div>';
			}, function errorCallback(response){
				clientService.actionResult = '<div class="alert alert-danger"><p>No se ha podido realizar el alta del cliente.</p>';
				clientService.actionResult += '<p>Error ' + response.data[0].errorCode + ': ' + response.data[0].errorMsg + '</p></div>';
			})
			.finally(function(){
				/* Se vacía el array de resultados de la búsqueda realizada inicialmente */
				clientService.data = [];
				
				/* Se redirecciona a la página principal. */
				$location.path('/clientes');
			});
		};
		
	})
	
	/* Se crea un servicio para mantener ciertos datos en todo el proceso */
	.factory('clientService', function(){
		var service = {
				data: [],
				actionResult: ''
		};
		return service
	});